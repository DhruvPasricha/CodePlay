{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhruv\\\\Downloads\\\\projects OP\\\\codepen-clone\\\\src\\\\Editor.jsx\";\nimport React from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('codemirror/mode/xml/xml');\n\nrequire('codemirror/mode/javascript/javascript');\n\nfunction Editor(prop) {\n  const {\n    value,\n    lang,\n    setValue\n  } = prop;\n\n  const handleKeyPress = (editor, event) => {\n    // if (event.keyCode === KEY_CODES.ENTER) {\n    //     // will return editor value\n    // }\n    console.log('input: ', editor.getValue());\n  };\n\n  console.log(prop);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CodeMirror, {\n      value: value,\n      options: {\n        mode: {\n          lang\n        },\n        theme: 'material',\n        lineNumbers: true,\n        foldGutter: false,\n        styleActiveLine: false,\n        autofocus: true\n      },\n      onBeforeChange: (editor, data, code) => setValue(value),\n      onChange: (editor, data, value) => {\n        setValue(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["C:/Users/Dhruv/Downloads/projects OP/codepen-clone/src/Editor.jsx"],"names":["React","Controlled","CodeMirror","require","Editor","prop","value","lang","setValue","handleKeyPress","editor","event","console","log","getValue","mode","theme","lineNumbers","foldGutter","styleActiveLine","autofocus","data","code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,SAASC,UAAU,IAAIC,UAAvB,QAAyC,mBAAzC;;;AACAC,OAAO,CAAC,yBAAD,CAAP;;AACAA,OAAO,CAAC,uCAAD,CAAP;;AAGA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAGlB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAA4BH,IAAlC;;AAGA,QAAMI,cAAc,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAEtC;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAM,CAACI,QAAP,EAAvB;AAEH,GAPD;;AASAF,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,sBACI;AAAA,2BACI,QAAC,UAAD;AACI,MAAA,KAAK,EAAEC,KADX;AAEI,MAAA,OAAO,EAAE;AACLS,QAAAA,IAAI,EAAE;AAAER,UAAAA;AAAF,SADD;AAELS,QAAAA,KAAK,EAAE,UAFF;AAGLC,QAAAA,WAAW,EAAE,IAHR;AAILC,QAAAA,UAAU,EAAE,KAJP;AAKLC,QAAAA,eAAe,EAAE,KALZ;AAMLC,QAAAA,SAAS,EAAE;AANN,OAFb;AAUI,MAAA,cAAc,EAAE,CAACV,MAAD,EAASW,IAAT,EAAeC,IAAf,KAAwBd,QAAQ,CAACF,KAAD,CAVpD;AAWI,MAAA,QAAQ,EAAE,CAACI,MAAD,EAASW,IAAT,EAAef,KAAf,KAAyB;AAC/BE,QAAAA,QAAQ,CAACF,KAAD,CAAR;AACH;AAbL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;KAnCQF,M;AAqCT,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport { Controlled as CodeMirror } from 'react-codemirror2'\r\nrequire('codemirror/mode/xml/xml');\r\nrequire('codemirror/mode/javascript/javascript');\r\n\r\n\r\nfunction Editor(prop) {\r\n\r\n\r\n    const { value, lang, setValue } = prop;\r\n\r\n\r\n    const handleKeyPress = (editor, event) => {\r\n\r\n        // if (event.keyCode === KEY_CODES.ENTER) {\r\n        //     // will return editor value\r\n        // }\r\n        console.log('input: ', editor.getValue());\r\n\r\n    };\r\n\r\n    console.log(prop);\r\n    return (\r\n        <div>\r\n            <CodeMirror\r\n                value={value}\r\n                options={{\r\n                    mode: { lang },\r\n                    theme: 'material',\r\n                    lineNumbers: true,\r\n                    foldGutter: false,\r\n                    styleActiveLine: false,\r\n                    autofocus: true,\r\n                }}\r\n                onBeforeChange={(editor, data, code) => setValue(value)}\r\n                onChange={(editor, data, value) => {\r\n                    setValue(value);\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor"]},"metadata":{},"sourceType":"module"}