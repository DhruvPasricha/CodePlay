{"ast":null,"code":"function noop() {}\n\nfunction getOrCreateModel(monaco, value, language, path) {\n  return getModel(monaco, path) || createModel(monaco, value, language, path);\n}\n\nfunction getModel(monaco, path) {\n  return monaco.editor.getModel(createModelUri(monaco, path));\n}\n\nfunction createModel(monaco, value, language, path) {\n  return monaco.editor.createModel(value, language, path && createModelUri(monaco, path));\n}\n\nfunction createModelUri(monaco, path) {\n  return monaco.Uri.parse(path);\n}\n\nfunction isUndefined(input) {\n  return input === undefined;\n}\n\nexport { getOrCreateModel, isUndefined, noop };","map":{"version":3,"sources":["C:/Users/Dhruv/Downloads/projects OP/CodePlay/node_modules/@monaco-editor/react/lib/es/utils/index.js"],"names":["noop","getOrCreateModel","monaco","value","language","path","getModel","createModel","editor","createModelUri","Uri","parse","isUndefined","input","undefined"],"mappings":"AAAA,SAASA,IAAT,GAAgB,CAAE;;AAElB,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,IAAnD,EAAyD;AACvD,SAAOC,QAAQ,CAACJ,MAAD,EAASG,IAAT,CAAR,IAA0BE,WAAW,CAACL,MAAD,EAASC,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,CAA5C;AACD;;AAED,SAASC,QAAT,CAAkBJ,MAAlB,EAA0BG,IAA1B,EAAgC;AAC9B,SAAOH,MAAM,CAACM,MAAP,CAAcF,QAAd,CAAuBG,cAAc,CAACP,MAAD,EAASG,IAAT,CAArC,CAAP;AACD;;AAED,SAASE,WAAT,CAAqBL,MAArB,EAA6BC,KAA7B,EAAoCC,QAApC,EAA8CC,IAA9C,EAAoD;AAClD,SAAOH,MAAM,CAACM,MAAP,CAAcD,WAAd,CAA0BJ,KAA1B,EAAiCC,QAAjC,EAA2CC,IAAI,IAAII,cAAc,CAACP,MAAD,EAASG,IAAT,CAAjE,CAAP;AACD;;AAED,SAASI,cAAT,CAAwBP,MAAxB,EAAgCG,IAAhC,EAAsC;AACpC,SAAOH,MAAM,CAACQ,GAAP,CAAWC,KAAX,CAAiBN,IAAjB,CAAP;AACD;;AAED,SAASO,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAOA,KAAK,KAAKC,SAAjB;AACD;;AAED,SAASb,gBAAT,EAA2BW,WAA3B,EAAwCZ,IAAxC","sourcesContent":["function noop() {}\n\nfunction getOrCreateModel(monaco, value, language, path) {\n  return getModel(monaco, path) || createModel(monaco, value, language, path);\n}\n\nfunction getModel(monaco, path) {\n  return monaco.editor.getModel(createModelUri(monaco, path));\n}\n\nfunction createModel(monaco, value, language, path) {\n  return monaco.editor.createModel(value, language, path && createModelUri(monaco, path));\n}\n\nfunction createModelUri(monaco, path) {\n  return monaco.Uri.parse(path);\n}\n\nfunction isUndefined(input) {\n  return input === undefined;\n}\n\nexport { getOrCreateModel, isUndefined, noop };\n"]},"metadata":{},"sourceType":"module"}