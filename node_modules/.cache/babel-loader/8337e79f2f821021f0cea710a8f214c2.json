{"ast":null,"code":"import curry from '../utils/curry.js';\nimport isObject from '../utils/isObject.js';\n/**\n * validates the configuration object and informs about deprecation\n * @param {Object} config - the configuration object \n * @return {Object} config - the validated configuration object\n */\n\nfunction validateConfig(config) {\n  if (!config) errorHandler('configIsRequired');\n  if (!isObject(config)) errorHandler('configType');\n\n  if (config.urls) {\n    informAboutDeprecation();\n    return {\n      paths: {\n        vs: config.urls.monacoBase\n      }\n    };\n  }\n\n  return config;\n}\n/**\n * logs deprecation message\n */\n\n\nfunction informAboutDeprecation() {\n  console.warn(errorMessages.deprecation);\n}\n\nfunction throwError(errorMessages, type) {\n  throw new Error(errorMessages[type] || errorMessages[\"default\"]);\n}\n\nvar errorMessages = {\n  configIsRequired: 'the configuration object is required',\n  configType: 'the configuration object should be an object',\n  \"default\": 'an unknown error accured in `@monaco-editor/loader` package',\n  deprecation: \"Deprecation warning!\\n    You are using deprecated way of configuration.\\n\\n    Instead of using\\n      monaco.config({ urls: { monacoBase: '...' } })\\n    use\\n      monaco.config({ paths: { vs: '...' } })\\n\\n    For more please check the link https://github.com/suren-atoyan/monaco-loader#config\\n  \"\n};\nvar errorHandler = curry(throwError)(errorMessages);\nvar validators = {\n  config: validateConfig\n};\nexport default validators;\nexport { errorHandler, errorMessages };","map":{"version":3,"sources":["C:/Users/Dhruv/Downloads/projects OP/CodePlay/node_modules/@monaco-editor/loader/lib/es/validators/index.js"],"names":["curry","isObject","validateConfig","config","errorHandler","urls","informAboutDeprecation","paths","vs","monacoBase","console","warn","errorMessages","deprecation","throwError","type","Error","configIsRequired","configType","validators"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,MAAI,CAACA,MAAL,EAAaC,YAAY,CAAC,kBAAD,CAAZ;AACb,MAAI,CAACH,QAAQ,CAACE,MAAD,CAAb,EAAuBC,YAAY,CAAC,YAAD,CAAZ;;AAEvB,MAAID,MAAM,CAACE,IAAX,EAAiB;AACfC,IAAAA,sBAAsB;AACtB,WAAO;AACLC,MAAAA,KAAK,EAAE;AACLC,QAAAA,EAAE,EAAEL,MAAM,CAACE,IAAP,CAAYI;AADX;AADF,KAAP;AAKD;;AAED,SAAON,MAAP;AACD;AACD;AACA;AACA;;;AAGA,SAASG,sBAAT,GAAkC;AAChCI,EAAAA,OAAO,CAACC,IAAR,CAAaC,aAAa,CAACC,WAA3B;AACD;;AAED,SAASC,UAAT,CAAoBF,aAApB,EAAmCG,IAAnC,EAAyC;AACvC,QAAM,IAAIC,KAAJ,CAAUJ,aAAa,CAACG,IAAD,CAAb,IAAuBH,aAAa,CAAC,SAAD,CAA9C,CAAN;AACD;;AAED,IAAIA,aAAa,GAAG;AAClBK,EAAAA,gBAAgB,EAAE,sCADA;AAElBC,EAAAA,UAAU,EAAE,8CAFM;AAGlB,aAAW,6DAHO;AAIlBL,EAAAA,WAAW,EAAE;AAJK,CAApB;AAMA,IAAIT,YAAY,GAAGJ,KAAK,CAACc,UAAD,CAAL,CAAkBF,aAAlB,CAAnB;AACA,IAAIO,UAAU,GAAG;AACfhB,EAAAA,MAAM,EAAED;AADO,CAAjB;AAIA,eAAeiB,UAAf;AACA,SAASf,YAAT,EAAuBQ,aAAvB","sourcesContent":["import curry from '../utils/curry.js';\nimport isObject from '../utils/isObject.js';\n\n/**\n * validates the configuration object and informs about deprecation\n * @param {Object} config - the configuration object \n * @return {Object} config - the validated configuration object\n */\n\nfunction validateConfig(config) {\n  if (!config) errorHandler('configIsRequired');\n  if (!isObject(config)) errorHandler('configType');\n\n  if (config.urls) {\n    informAboutDeprecation();\n    return {\n      paths: {\n        vs: config.urls.monacoBase\n      }\n    };\n  }\n\n  return config;\n}\n/**\n * logs deprecation message\n */\n\n\nfunction informAboutDeprecation() {\n  console.warn(errorMessages.deprecation);\n}\n\nfunction throwError(errorMessages, type) {\n  throw new Error(errorMessages[type] || errorMessages[\"default\"]);\n}\n\nvar errorMessages = {\n  configIsRequired: 'the configuration object is required',\n  configType: 'the configuration object should be an object',\n  \"default\": 'an unknown error accured in `@monaco-editor/loader` package',\n  deprecation: \"Deprecation warning!\\n    You are using deprecated way of configuration.\\n\\n    Instead of using\\n      monaco.config({ urls: { monacoBase: '...' } })\\n    use\\n      monaco.config({ paths: { vs: '...' } })\\n\\n    For more please check the link https://github.com/suren-atoyan/monaco-loader#config\\n  \"\n};\nvar errorHandler = curry(throwError)(errorMessages);\nvar validators = {\n  config: validateConfig\n};\n\nexport default validators;\nexport { errorHandler, errorMessages };\n"]},"metadata":{},"sourceType":"module"}