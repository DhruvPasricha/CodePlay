{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhruv\\\\Downloads\\\\projects OP\\\\codepen-clone\\\\src\\\\Editor.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('codemirror/mode/xml/xml');\n\nrequire('codemirror/mode/javascript/javascript');\n\nfunction Editor(prop) {\n  _s();\n\n  const {\n    value,\n    lang,\n    setValue,\n    displayName\n  } = prop;\n  const [width, setWidth] = useState(\"20%\");\n  return /*#__PURE__*/_jsxDEV(ResizableBox, {\n    width: 10,\n    onResize: (event, {\n      element,\n      size\n    }) => {\n      console.log(size); // setWidth(size.width);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: [\" \", displayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CodeMirror, {\n        value: value,\n        options: {\n          mode: lang,\n          theme: 'material',\n          lineNumbers: true,\n          autofocus: true,\n          readOnly: false\n        },\n        onBeforeChange: (editor, data, newValue) => {\n          setValue(newValue);\n        },\n        className: \"code-editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Editor, \"k9q4cInTtfeB1DOYr1PmTdvFvog=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["C:/Users/Dhruv/Downloads/projects OP/codepen-clone/src/Editor.jsx"],"names":["React","Controlled","CodeMirror","Resizable","ResizableBox","useState","require","Editor","prop","value","lang","setValue","displayName","width","setWidth","event","element","size","console","log","mode","theme","lineNumbers","autofocus","readOnly","editor","data","newValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,SAASC,UAAU,IAAIC,UAAvB,QAAyC,mBAAzC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,iBAAxC;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACAC,OAAO,CAAC,yBAAD,CAAP;;AACAA,OAAO,CAAC,uCAAD,CAAP;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAAA;;AAGlB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAyCJ,IAA/C;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,sBAEI,QAAC,YAAD;AACI,IAAA,KAAK,EAAE,EADX;AACe,IAAA,QAAQ,EAAE,CAACU,KAAD,EAAQ;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAR,KAA8B;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAD+C,CAE/C;AACH,KAJL;AAAA,2BAMI;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA,8BACI;AAAA,wBAAYL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AACI,QAAA,KAAK,EAAEH,KADX;AAEI,QAAA,OAAO,EAAE;AACLW,UAAAA,IAAI,EAAEV,IADD;AAELW,UAAAA,KAAK,EAAE,UAFF;AAGLC,UAAAA,WAAW,EAAE,IAHR;AAILC,UAAAA,SAAS,EAAE,IAJN;AAKLC,UAAAA,QAAQ,EAAE;AALL,SAFb;AASI,QAAA,cAAc,EAAE,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,KAA4B;AACxChB,UAAAA,QAAQ,CAACgB,QAAD,CAAR;AACH,SAXL;AAYI,QAAA,SAAS,EAAC;AAZd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AA4BH;;GAlCQpB,M;;KAAAA,M;AAoCT,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport { Controlled as CodeMirror } from 'react-codemirror2'\r\nimport { Resizable, ResizableBox } from 'react-resizable';\r\nimport { useState } from 'react'\r\nrequire('codemirror/mode/xml/xml');\r\nrequire('codemirror/mode/javascript/javascript');\r\n\r\nfunction Editor(prop) {\r\n\r\n\r\n    const { value, lang, setValue, displayName } = prop;\r\n\r\n    const [width, setWidth] = useState(\"20%\");\r\n    return (\r\n\r\n        <ResizableBox\r\n            width={10} onResize={(event, { element, size }) => {\r\n                console.log(size);\r\n                // setWidth(size.width);\r\n            }}>\r\n\r\n            <div class=\"editor\">\r\n                < button > {displayName}</button >\r\n                <CodeMirror\r\n                    value={value}\r\n                    options={{\r\n                        mode: lang,\r\n                        theme: 'material',\r\n                        lineNumbers: true,\r\n                        autofocus: true,\r\n                        readOnly: false,\r\n                    }}\r\n                    onBeforeChange={(editor, data, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    className=\"code-editor\"\r\n                />\r\n            </div>\r\n        </ResizableBox >\r\n    );\r\n\r\n}\r\n\r\nexport default Editor"]},"metadata":{},"sourceType":"module"}