{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhruv\\\\Downloads\\\\projects OP\\\\codepen-clone\\\\src\\\\Editor.jsx\";\nimport React from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('codemirror/mode/xml/xml');\n\nrequire('codemirror/mode/javascript/javascript');\n\nfunction Editor(prop) {\n  const {\n    value,\n    lang,\n    setValue,\n    displayName\n  } = prop;\n  return /*#__PURE__*/_jsxDEV(ResizableBox, {\n    width: 200,\n    height: 200,\n    minConstraints: [100, 100],\n    maxConstraints: [300, 300],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CodeMirror, {\n        value: value,\n        options: {\n          mode: lang,\n          theme: 'material',\n          lineNumbers: true,\n          autofocus: true,\n          readOnly: false\n        },\n        onBeforeChange: (editor, data, newValue) => {\n          setValue(newValue);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["C:/Users/Dhruv/Downloads/projects OP/codepen-clone/src/Editor.jsx"],"names":["React","Controlled","CodeMirror","Resizable","ResizableBox","require","Editor","prop","value","lang","setValue","displayName","mode","theme","lineNumbers","autofocus","readOnly","editor","data","newValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,SAASC,UAAU,IAAIC,UAAvB,QAAyC,mBAAzC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,iBAAxC;;;AACAC,OAAO,CAAC,yBAAD,CAAP;;AACAA,OAAO,CAAC,uCAAD,CAAP;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAGlB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAyCJ,IAA/C;AAEA,sBAEI,QAAC,YAAD;AAAc,IAAA,KAAK,EAAE,GAArB;AAA0B,IAAA,MAAM,EAAE,GAAlC;AAAuC,IAAA,cAAc,EAAE,CAAC,GAAD,EAAM,GAAN,CAAvD;AAAmE,IAAA,cAAc,EAAE,CAAC,GAAD,EAAM,GAAN,CAAnF;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA,kBAAUI;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AACI,QAAA,KAAK,EAAEH,KADX;AAEI,QAAA,OAAO,EAAE;AACLI,UAAAA,IAAI,EAAEH,IADD;AAELI,UAAAA,KAAK,EAAE,UAFF;AAGLC,UAAAA,WAAW,EAAE,IAHR;AAILC,UAAAA,SAAS,EAAE,IAJN;AAKLC,UAAAA,QAAQ,EAAE;AALL,SAFb;AASI,QAAA,cAAc,EAAE,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,KAA4B;AACxCT,UAAAA,QAAQ,CAACS,QAAD,CAAR;AACH;AAXL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBH;;KA1BQb,M;AA4BT,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport { Controlled as CodeMirror } from 'react-codemirror2'\r\nimport { Resizable, ResizableBox } from 'react-resizable';\r\nrequire('codemirror/mode/xml/xml');\r\nrequire('codemirror/mode/javascript/javascript');\r\n\r\nfunction Editor(prop) {\r\n\r\n\r\n    const { value, lang, setValue, displayName } = prop;\r\n\r\n    return (\r\n\r\n        <ResizableBox width={200} height={200} minConstraints={[100, 100]} maxConstraints={[300, 300]}>\r\n            <div className=\"editor\">\r\n                <button >{displayName}</button>\r\n                <CodeMirror\r\n                    value={value}\r\n                    options={{\r\n                        mode: lang,\r\n                        theme: 'material',\r\n                        lineNumbers: true,\r\n                        autofocus: true,\r\n                        readOnly: false,\r\n                    }}\r\n                    onBeforeChange={(editor, data, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                />\r\n            </div>\r\n        </ ResizableBox >\r\n    )\r\n}\r\n\r\nexport default Editor"]},"metadata":{},"sourceType":"module"}