{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhruv\\\\Downloads\\\\projects OP\\\\codepen-clone\\\\src\\\\Editor.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { Resizable, ResizableBox } from 'react-resizable';\n\nrequire('codemirror/mode/xml/xml');\n\nrequire('codemirror/mode/javascript/javascript');\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editor(prop) {\n  _s();\n\n  const {\n    value,\n    lang,\n    setValue,\n    displayName\n  } = prop;\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  return /*#__PURE__*/_jsxDEV(ResizableBox, {\n    axis: \"x\",\n    className: \"editor\",\n    onResize: (event, {\n      element,\n      size\n    }) => {\n      setWindowWidth({\n        width: size.width,\n        height: size.height\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: [\" \", displayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CodeMirror, {\n      value: value,\n      options: {\n        mode: lang,\n        theme: 'material',\n        lineNumbers: true,\n        autofocus: true,\n        readOnly: false\n      },\n      onBeforeChange: (editor, data, newValue) => {\n        setValue(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Editor, \"64b2sJ9z9NfgnJjgy5WgAQM2U64=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["C:/Users/Dhruv/Downloads/projects OP/codepen-clone/src/Editor.jsx"],"names":["React","Controlled","CodeMirror","Resizable","ResizableBox","require","useState","Editor","prop","value","lang","setValue","displayName","windowWidth","setWindowWidth","window","innerWidth","event","element","size","width","height","mode","theme","lineNumbers","autofocus","readOnly","editor","data","newValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,SAASC,UAAU,IAAIC,UAAvB,QAAyC,mBAAzC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,iBAAxC;;AACAC,OAAO,CAAC,yBAAD,CAAP;;AACAA,OAAO,CAAC,uCAAD,CAAP;;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAAA;;AAGlB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAyCJ,IAA/C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACS,MAAM,CAACC,UAAR,CAA9C;AACA,sBAGI,QAAC,YAAD;AACI,IAAA,IAAI,EAAC,GADT;AACa,IAAA,SAAS,EAAC,QADvB;AACgC,IAAA,QAAQ,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAR,KAA8B;AAChEL,MAAAA,cAAc,CAAC;AAAEM,QAAAA,KAAK,EAAED,IAAI,CAACC,KAAd;AAAqBC,QAAAA,MAAM,EAAEF,IAAI,CAACE;AAAlC,OAAD,CAAd;AACH,KAHL;AAAA,4BAKI;AAAA,sBAAYT,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,UAAD;AACI,MAAA,KAAK,EAAEH,KADX;AAEI,MAAA,OAAO,EAAE;AACLa,QAAAA,IAAI,EAAEZ,IADD;AAELa,QAAAA,KAAK,EAAE,UAFF;AAGLC,QAAAA,WAAW,EAAE,IAHR;AAILC,QAAAA,SAAS,EAAE,IAJN;AAKLC,QAAAA,QAAQ,EAAE;AALL,OAFb;AASI,MAAA,cAAc,EAAE,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,KAA4B;AACxClB,QAAAA,QAAQ,CAACkB,QAAD,CAAR;AACH;AAXL;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAyBH;;GA9BQtB,M;;KAAAA,M;AAgCT,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport { Controlled as CodeMirror } from 'react-codemirror2'\r\nimport { Resizable, ResizableBox } from 'react-resizable';\r\nrequire('codemirror/mode/xml/xml');\r\nrequire('codemirror/mode/javascript/javascript');\r\nimport { useState } from 'react'\r\n\r\nfunction Editor(prop) {\r\n\r\n\r\n    const { value, lang, setValue, displayName } = prop;\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    return (\r\n\r\n\r\n        <ResizableBox\r\n            axis=\"x\" className=\"editor\" onResize={(event, { element, size }) => {\r\n                setWindowWidth({ width: size.width, height: size.height });\r\n            }}>\r\n\r\n            < button > {displayName}</button >\r\n            <CodeMirror\r\n                value={value}\r\n                options={{\r\n                    mode: lang,\r\n                    theme: 'material',\r\n                    lineNumbers: true,\r\n                    autofocus: true,\r\n                    readOnly: false,\r\n                }}\r\n                onBeforeChange={(editor, data, newValue) => {\r\n                    setValue(newValue);\r\n                }}\r\n            />\r\n        </ResizableBox >\r\n    );\r\n\r\n}\r\n\r\nexport default Editor"]},"metadata":{},"sourceType":"module"}