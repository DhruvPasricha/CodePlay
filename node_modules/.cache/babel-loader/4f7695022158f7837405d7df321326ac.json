{"ast":null,"code":"import loader from '@monaco-editor/loader';\nimport { useState } from 'react';\nimport useMount from '../useMount/index.js';\n\nfunction useMonaco() {\n  const [monaco, setMonaco] = useState(loader.__getMonacoInstance());\n  useMount(() => {\n    let cancelable;\n\n    if (!monaco) {\n      cancelable = loader.init();\n      cancelable.then(monaco => {\n        setMonaco(monaco);\n      });\n    }\n\n    return () => {\n      var _cancelable;\n\n      return (_cancelable = cancelable) === null || _cancelable === void 0 ? void 0 : _cancelable.cancel();\n    };\n  });\n  return monaco;\n}\n\nexport default useMonaco;","map":{"version":3,"sources":["C:/Users/Dhruv/Downloads/projects OP/CodePlay/node_modules/@monaco-editor/react/lib/es/hooks/useMonaco/index.js"],"names":["loader","useState","useMount","useMonaco","monaco","setMonaco","__getMonacoInstance","cancelable","init","then","_cancelable","cancel"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACD,MAAM,CAACM,mBAAP,EAAD,CAApC;AACAJ,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIK,UAAJ;;AAEA,QAAI,CAACH,MAAL,EAAa;AACXG,MAAAA,UAAU,GAAGP,MAAM,CAACQ,IAAP,EAAb;AACAD,MAAAA,UAAU,CAACE,IAAX,CAAgBL,MAAM,IAAI;AACxBC,QAAAA,SAAS,CAACD,MAAD,CAAT;AACD,OAFD;AAGD;;AAED,WAAO,MAAM;AACX,UAAIM,WAAJ;;AAEA,aAAO,CAACA,WAAW,GAAGH,UAAf,MAA+B,IAA/B,IAAuCG,WAAW,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,WAAW,CAACC,MAAZ,EAAhF;AACD,KAJD;AAKD,GAfO,CAAR;AAgBA,SAAOP,MAAP;AACD;;AAED,eAAeD,SAAf","sourcesContent":["import loader from '@monaco-editor/loader';\nimport { useState } from 'react';\nimport useMount from '../useMount/index.js';\n\nfunction useMonaco() {\n  const [monaco, setMonaco] = useState(loader.__getMonacoInstance());\n  useMount(() => {\n    let cancelable;\n\n    if (!monaco) {\n      cancelable = loader.init();\n      cancelable.then(monaco => {\n        setMonaco(monaco);\n      });\n    }\n\n    return () => {\n      var _cancelable;\n\n      return (_cancelable = cancelable) === null || _cancelable === void 0 ? void 0 : _cancelable.cancel();\n    };\n  });\n  return monaco;\n}\n\nexport default useMonaco;\n"]},"metadata":{},"sourceType":"module"}